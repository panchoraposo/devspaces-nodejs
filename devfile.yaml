schemaVersion: 2.2.0
metadata:
  name: nodejs-greetings
  language: "JavaScript"
  projectType: "Node.js"
attributes:
  vscode.extensions:
    - ms-vscode.vscode-node-azure-pack
    - dbaeumer.vscode-eslint
    - eamodio.gitlens
    - redhat.vscode-yaml
    - ms-vsliveshare.vsliveshare
components:
  - name: runtime
    container:
      image: registry.redhat.io/ubi9/nodejs-20
      command: ["tail", "-f", "/dev/null"]
      memoryLimit: 512Mi
      cpuLimit: 500m
      sourceMapping: /projects
      mountSources: true
      endpoints:
        - name: https-node
          targetPort: 3000
          protocol: https
        - exposure: none
          name: debug
          targetPort: 9229
      volumeMounts:
        - name: app-cache
          path: /projects/node_modules
      env:
        - name: NODE_ENV
          value: development
        - name: PORT
          value: "3000"
  # Define the volume used for caching dependencies
  volumes:
    - name: app-cache
      ephemeral: true  # Ephemeral volumes are temporary, use persistent for permanent storage
commands:
  - id: lint
    exec:
      component: runtime
      commandLine: npm run lint
      workingDir: ${PROJECT_SOURCE}/src
      group:
        kind: build

  - id: run-debug
    exec:
      component: runtime
      commandLine: node --inspect=0.0.0.0:9229 index.js
      workingDir: ${PROJECT_SOURCE}/src
      group:
        kind: run

  - id: start-with-nodemon
    exec:
      component: runtime
      commandLine: npx nodemon index.js
      workingDir: ${PROJECT_SOURCE}/src
      group:
        kind: run
  
  - id: format
    exec:
      component: runtime
      commandLine: npm run format
  
  - id: install-dependencies
    exec:
      component: runtime
      commandLine: npm install
      workingDir: ${PROJECT_SOURCE}/src
      group:
        kind: build
        isDefault: true
    
  - id: run
    exec:
      component: runtime
      commandLine: node index.js
      workingDir: ${PROJECT_SOURCE}/src
      group:
        kind: run
        isDefault: true

  - id: deploy
    exec:
      component: runtime
      commandLine: npm run openshift
      workingDir: ${PROJECT_SOURCE}/src
      group:
        kind: deploy
        isDefault: true

  - id: test
    exec:
      component: runtime
      commandLine: ls -la
      workingDir: ${PROJECT_SOURCE}

  - id: prestart-setup
    composite:
      commands:
        - install-dependencies        
      parallel: false
  
  - id: poststart-setup
    composite:
      commands:
        - run
      parallel: false
